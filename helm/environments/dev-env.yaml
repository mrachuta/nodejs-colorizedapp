imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

deployments:
  d1:
    replicaCount: 1
    weight: 50

    image:
      repository: mzraacr01.azurecr.io/nodejs-colorizedapp
      pullPolicy: Always
      tag: "feature_add-act-as-a-frontend-feature-7b8426d"

    env:
      MESSAGE: "Hello from dev-env d1"
      BG_COLOR: "#ffff00"
      FONT_COLOR: "#000000"
      FORCE_SET_NOT_READY: false
      BACKEND_URL: "http://passwordlessdbapp-dev-env:8080/api"

    serviceAccount:
      create: false
      automount: false
      annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""

    podAnnotations: {}
    podLabels: {}

    podSecurityContext: {}

    securityContext: {}

    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi

    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 3
      targetCPUUtilizationPercentage: 80
      targetMemoryUtilizationPercentage: 80

    volumes: []

    volumeMounts: []

    nodeSelector: {}

    tolerations: []

    affinity: {}

  d2:
    replicaCount: 1
    weight: 50

    image:
      repository: mzraacr01.azurecr.io/nodejs-colorizedapp
      pullPolicy: Always
      tag: "1.1.7"

    env:
      MESSAGE: "Hello from dev-env d2"
      BG_COLOR: "#ff1493"
      FONT_COLOR: "#000000"
      FORCE_SET_NOT_READY: false

    serviceAccount:
      create: false
      automount: false
      annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""

    podAnnotations: {}
    podLabels: {}

    podSecurityContext: {}

    securityContext: {}

    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi

    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 3
      targetCPUUtilizationPercentage: 80
      targetMemoryUtilizationPercentage: 80

    volumes: []

    volumeMounts: []

    nodeSelector: {}

    tolerations: []

    affinity: {}

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: true
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  host: nodejs-colorizedapp-dev-env.aks.thinkbox.pl
  path: /
  pathType: ImplementationSpecific
  tls:
    enabled: true
    secretName: ""
