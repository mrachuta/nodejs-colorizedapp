name: CI build
run-name: CI job triggered by ${{ github.event_name }} for ${{ github.ref_name }}
on:
  push:
  pull_request:
    types: [opened, edited, synchronize, reopened]
  issue_comment:                                     
    types: [created, edited, deleted]

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  long_ci:
    # Trigger only when it's comment in PR or just PR
    if: (contains(github.event.comment.body, '/rerun') &&
      github.event_name == 'pull_request') ||
      github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      # https://dev.to/zirkelc/trigger-github-workflow-for-comment-on-pull-request-45l2
      - name: Get PR branch
        if: github.event_name == 'issue_comment' &&
          contains(github.event.comment.body, '/rerun')
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

      - name: Set latest commit status as pending
        if: github.event_name == 'issue_comment' &&
          contains(github.event.comment.body, '/rerun')
        uses: myrotvorets/set-commit-status-action@master
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: pending

      - name: Checkout PR branch
        if: github.event_name == 'issue_comment' &&
          contains(github.event.comment.body, '/rerun')
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}

      # Standard checkout if comment-branch not set
      - name: Checkout repository
        if: ${{ ! steps.comment-branch.outputs.head_ref }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run linter
        uses: actions/setup-node@v3
        with:
          node-version: '20.10.0'
      - run: npm ci
      - run: ./node_modules/.bin/eslint src/ tests/

      - name: Run SCA scan
        uses: actions/setup-node@v3
        with:
          node-version: '20.10.0'
      - run: npm ci
      - run: ./node_modules/.bin/retire -v

      - name: Run secrets-leak scan
        uses: trufflesecurity/trufflehog@v3.66.3
        with:
          base: ""
          head: ${{ github.ref_name }}
          extra_args: --only-verified

      - name: SAST scan
        uses: bearer/bearer-action@v2
        continue-on-error: true
        with:
          format: sarif
          output: results.sarif

      - name: Upload SAST scan report
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
          category: SAST

      - name: Run unit tests
        uses: actions/setup-node@v3
        with:
          node-version: '20.10.0'
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test

      - name: Add comment to PR
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const name = '${{ github.workflow }}';
            const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const success = '${{ job.status }}' === 'success';
            const body = `${name}: ${success ? 'succeeded ✅' : 'failed ❌'}\n${url}`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })

  short_ci:
    # Trigger if event is not PR or not comment
    if: github.event_name != 'pull_request' &&
      github.event_name != 'issue_comment'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run linter
        uses: actions/setup-node@v3
        with:
          node-version: '20.10.0'
      - run: npm ci
      - run: ./node_modules/.bin/eslint src/ tests/

      - name: Run unit tests
        uses: actions/setup-node@v3
        with:
          node-version: '20.10.0'
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test

